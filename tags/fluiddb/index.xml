<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns='http://www.w3.org/2005/Atom' xml:lang='en-us'>
 <title>pelure</title>
 <id>http://hugoduncan.github.com/</id>
 <link href='./' />
 <link rel='self' href='' />
 <logo>rsslogo.jpg</logo>
 <icon>/favicon.ico</icon>
 <author><name>Hugo Duncan</name></author>
 <subtitle>Pelure </subtitle>
 <rights>All content written by Hugo Duncan and photos by Hugo Duncan Copyright Hugo Duncan, all rights reserved.</rights> 
 <updated>2013-08-25T00:00:00Z</updated>


<entry xml:base="http://hugoduncan.github.com/post/a_clojure_library_for_fluiddb"><title>A Clojure library for FluidDB</title><link href="http://hugoduncan.github.com/post/a_clojure_library_for_fluiddb"/><id>http://hugoduncan.github.com/post/a_clojure_library_for_fluiddb</id><published>2009-09-13T00:00:00Z</published><updated>2009-09-13T00:00:00Z</updated><summary type="html"> </summary><content type="html">&lt;p&gt;&lt;a href=&#34;http://fluidinfo.com/&#34;&gt;FluidDB&lt;/a&gt;, a &#34;cloud&#34; based triple-store, where the objects are immutable and can be tagged by anyone, launched about a month ago. As a another step to getting up to speed with &lt;a href=&#34;http://clojure.org&#34;&gt;Clojure&lt;/a&gt;, I decided to write a client library, and &lt;a href=&#34;http://github.com/hugoduncan/clj-fluiddb&#34;&gt;clj-fluiddb&lt;/a&gt; was born.  The code was very simple, especially as I could base the library on &lt;a href=&#34;http://github.com/hdurer/cl-fluiddb&#34;&gt;cl-fluiddb&lt;/a&gt;, a Common-Lisp library.&lt;/p&gt;
&lt;p&gt;I have some ideas I want to try out using FluidDB.  It&#39;s permission system is one of it&#39;s &lt;a href=&#34;http://abouttag.blogspot.com/2009/09/permissions-worth-getting-excited-about.html&#34;&gt;best features&lt;/a&gt;, together with the ability to &lt;a href=&#34;http://www.xavierllora.net/2009/08/25/liquid-rdf-meandering-in-fluiddb/&#34;&gt;use it for RDF like triples&lt;/a&gt; means that it could provide a usable basis for growing the semantic web.  My ideas are less grandiose, but might take as long to develop, we&#39;ll see...&lt;/p&gt;
</content></entry>

</feed>
